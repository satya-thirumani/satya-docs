{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Light;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue109;\red11\green89\blue88;\red44\green44\blue44;
\red255\green255\blue255;\red0\green0\blue0;\red122\green117\blue0;\red0\green60\blue82;\red43\green71\blue20;
\red77\green0\blue105;\red9\green10\blue241;\red38\green38\blue38;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c42745;\csgenericrgb\c4314\c34902\c34510;\cssrgb\c22745\c22745\c22745;
\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;\csgenericrgb\c47843\c45882\c0;\csgenericrgb\c0\c23529\c32157;\csgenericrgb\c16863\c27843\c7843;
\csgenericrgb\c30196\c0\c41176;\csgenericrgb\c3529\c3922\c94510;\cssrgb\c20000\c20000\c20000;}
\paperw11900\paperh16840\vieww14040\viewh21400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs48 \cf2 \expnd0\expndtw0\kerning0
Octave								http://satya-data.blogspot.com
\fs36 \cf3 \
\pard\pardeftab720\partightenfactor0
\cf2 \ul \ulc2 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf4 \cb5 \ulnone Octave is one of alternatives to Matlab, FreeMat and Scilab.\
The program is named after Octave Levenspiel, a former professor of the principal author.\
\pard\pardeftab720\sl320\partightenfactor0
\cf4 an interpreted programming language\
\
\pard\pardeftab720\partightenfactor0
\cf4 help plot\
\
+			\cf4 \cb5 %\cf4 \cb5  addition\
-			\cf4 \cb5 %\cf4 \cb5  subtraction\
*			\cf4 \cb5 %\cf4 \cb5  multiplication\
/			\cf4 \cb5 %\cf4 \cb5  division\
^			\cf4 \cb5 %\cf4 \cb5  exponentiation\
== 			\cf4 \cb5 %\cf4 \cb5  equality\
~=			\cf4 \cb5 %\cf4 \cb5  not equality\
&&			\cf4 \cb5 %\cf4 \cb5  logical AND\
&			\cf4 \cb5 %\cf4 \cb5 \
||			\cf4 \cb5 %\cf4 \cb5  logical OR\
|			\cf4 \cb5 %\cf4 \cb5 \
xor(1,0)\
\
%			\cf4 \cb5 %\cf4 \cb5  commenting character\
;			\cf4 \cb5 %\cf4 \cb5  will suppress output\
\
PS1('>> ');	% octave prompt\
PS1('octave>> ');\
\
exp (i*pi)\
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb5 format short\
\pard\pardeftab720\sl320\partightenfactor0
\cf4 \cb5 format long\
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb5 s = 2		% Initialize constant s \
a =1, b=2, c=3\
x=1; y=5; z=9;\
text = "Hello world"\
\pard\pardeftab720\sl364\partightenfactor0
\cf4 x.a = 1; x.b = [1, 2; 3, 4]; x.c = "string";\
x.b\
\pard\pardeftab720\partightenfactor0
\cf4 x\
\
who\
whos\
\
clc			% command line clear (or) clear console\
clear			% clears all variables\
pwd\
cd \
ls\
dir\
\
disp(var)\
disp(sprintf('4 decimals: %0.4f', var)\
disp("x is positive")\
sprintf("pi to 8 decimal points: %0.8f", pi)\
\pard\pardeftab720\sl380\partightenfactor0
\cf4 sprintf('yes')\
\pard\pardeftab720\partightenfactor0
\cf4 \
\pard\pardeftab720\sl320\partightenfactor0
\cf4 \cb5 roots([1, -5])		% used for solving algebraic equations\
\pard\pardeftab720\sl320\partightenfactor0
\cf4 \cb5 s = roots(v);\
disp('Numeric value of fourth root'), disp(double(s(4)));\
\pard\pardeftab720\partightenfactor0
\cf4 \cb5 \
\
\pard\pardeftab720\sl320\partightenfactor0

\f0\fs36 \cf2 \cb1 \ul Control statements\
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs32 \cf7 \cb5 \ulnone if x>5,\
	disp("x is larger than 5");\
end;\
\
if v(1)==1,\
	disp('it is one');\
elseif v(1)==2,\
	disp('it is two');\
else\
	disp('it is more than two');\
end;\
\
\pard\pardeftab720\sl320\partightenfactor0

\f0\fs36 \cf2 \cb1 \ul Loops
\f1\fs32 \cf7 \cb5 \ulnone \
for i=1:10,\
	disp(i)\
end;\
\
while i <=8,\
	v(i) =100;\
	i = i+1;\
end;\
\
break;\
continue;\
\

\f0\fs36 \cf2 \cb1 \ul Functions
\f1\fs32 \cf7 \cb5 \ulnone \
addpath('c:\\users\\satya\\Desktop')\
\
vi function.m\
function y=squareNumber(x)\
	y=x^2;\
endfunction\
\
function [y1,y2]=squareAndCubeNumber(x)\
	y1=x^2;\
	y2=x^3;\
endfunction\
\
prediction=0.0;\
for j=1:n+1,\
	prediction = prediction + theta(j) * x(j)\
end;\
\
\pard\pardeftab720\sl320\partightenfactor0
\cf7 \cb5 nargin()\
\pard\pardeftab720\partightenfactor0
\cf7 usage("func(argument)")\
\pard\pardeftab720\sl320\partightenfactor0
\cf7 usage("mini(vector)")\cf7 \cb5 \
\
\pard\pardeftab720\sl320\partightenfactor0

\f0\fs36 \cf2 \cb1 \ul exception handling
\f1\fs32 \cf4 \cb5 \ulnone \
\pard\pardeftab720\sl364\partightenfactor0
\cf8 unwind_protect\
   body\
unwind_protect_cleanup\
   cleanup\
end_unwind_protect\
\pard\pardeftab720\partightenfactor0
\cf8 \
\pard\pardeftab720\sl364\partightenfactor0
\cf8 try\
   body\
catch\
   exception_handling\
end\
\
error("error message")\
\pard\pardeftab720\partightenfactor0
\cf4 \
\
\pard\pardeftab720\partightenfactor0

\f0\fs36 \cf2 \cb1 \ul Matrices
\f1\fs32 \cf4 \cb5 \ulnone \
\pard\pardeftab720\partightenfactor0
\cf9 A = [1 2; 3 4; 5 6]\
A = [ 1, 1, 2; 3, 5, 8; 13, 21, 34 ]\
A = [1, 2, 3; 4, 5, 6; 7, 8, 9; 10, 11, 12]		% The ; denotes we are going back to a new row.\
\pard\pardeftab720\partightenfactor0
\cf9 \cb5 B = rand (3, 2);\
s=1:6\
2:3:15\
\pard\pardeftab720\partightenfactor0
\cf9 \cb5 \
2 * A\
A * B			% matrix multiplication\
A .* C			% element wise multiplication\
A .^ 2			% element wise squaring\
1 ./ A\
A'				% A transpose\
A' * A\
(A')'\
max(A)\
max(A, [], 1)		% column-wise max value\
max(A, [], 2)		% row-wise max value\
max(max(A))\
max(A(:))\
[\cf9 \cb5 r, c] = find(A > 9)\
sum(A, 1)			% sums up all columns, default\
sum(A, 2)			% sums up all rows\
sum(sum(A .* eye(8)))\
sum(sum(A .* flipud(eye(8))))\
prediction = theta' * x;\
\cf9 \cb5 \
row_vect = [1 5 8]\
v=1:6\
row_vector = 1:0.1:2\
col_vect = [3; 6; 9]\
v = mat(1:10)\
v = [1;2;3] 		% Initialize a vector \
2 ./ v\
-v				% -1 * v\
v .* v\
isvector(x)\
log(v)\
abs(v)\
exp(v)\
prod(a)\
v + ones(length(v), 1)\
sum(a)\
prod(a)\
max(v)\
[val,ind] = max(a)\
a < 6\
find(a > 4)\
floor(a)\
ceil(a)\
\pard\pardeftab720\partightenfactor0
\cf9 \cb5 round(x)\
\pard\pardeftab720\sl380\partightenfactor0
\cf9 inv(M)			% inverses of matrix\
\pard\pardeftab720\partightenfactor0
\cf9 pinv(A)			% inverses of matrices in octave with the\'a0pinv(A)\'a0function\
\pard\pardeftab720\sl380\partightenfactor0
\cf9 M^-1			% inverses of matrix\
M\\eye(size(M))		% inverses of matrix\
flipud(A)\
\cf9 \cb5 \
\pard\pardeftab720\partightenfactor0
\cf9 ones(2,3)\
ones(4)\
C = 2 * ones(3,4)\
w = zeros(3)\
I = eye(2)			% Initialize a 2 by 2 identity matrix, is the same as I = [1,0;0,1]\
eye(5,5)\
flipud(eye(9))\
rand(3,3)\
randn(1,3)\
help rand\
A = magic(3)\
\
Indexing starts at 1, in Octave\
A(2,3)\
B(2,:)			\cf9 \cb5 %\cf9 \cb5  means all elements\
C(:,2)\
A([1 3], :)\
S(3, [1,2])\
S(2, [1:3])\
B(:)\
A(:,3) = [10; 14; 18]\
B = [B, [22; 33; 44]];\
C = [A B]			\cf9 \cb5 %\cf9 \cb5  concatenating matrices\
C = [A; B]			\cf9 \cb5 %\cf9 \cb5  appending matrices\
\
size(A)			\cf9 \cb5 %\cf9 \cb5  dimension of matrix, #rows & # cols\
size(A,1)			\cf9 \cb5 %\cf9 \cb5  of rows\
size(A,2)			\cf9 \cb5 %\cf9 \cb5  of cols\
length(v)\
length([1;2;5;7;9])\
\
[m,n] = size(A)			% Get the dimension of the matrix A where m = rows and n = columns\
dim_A = size(A)		% You could also store it this way\
dim_v = size(v)		% Get the dimension of the vector v 	\
A_23 = A(2,3)			% Now let's index into the 2nd row 3rd column of matrix A\
\
add_AB = A + B 		% See how element-wise addition works\
sub_AB = A - B		% See how element-wise subtraction works\
mult_As = A * s		% See how scalar multiplication works\
div_As = A / s			% Divide A by s\
add_As = A + s		% What happens if we have a Matrix + scalar?\
\
IA = I*A 				% What happens when we multiply I*A ?\
AI = A*I 				% How about A*I ? \
AB = A*B 			% Compute A*B\
BA = B*A 			% Is it equal to B*A?\
% Note that IA = AI but AB != BA\cf4 \
\
\pard\pardeftab720\partightenfactor0

\f0\fs36 \cf2 \cb1 \ul Plots:
\f1\fs32 \cf4 \cb5 \ulnone \
\pard\pardeftab720\partightenfactor0
\cf10 plot (t, x)\
t = [0:0.01:2]\
plot(t, sin(2*pi*4*t)\
hold on;\
plot(t, y2, 'r');\
xlabel('time')\
ylabel('value')\
legend('sin','cos')\
title('my plot')\
print -dpng 'plot.png'\
print -djpg 'plot.jpg'\
close\
figure(1)\
\pard\pardeftab720\sl320\partightenfactor0
\cf10 figure(2); plot(x, y2)\
\pard\pardeftab720\partightenfactor0
\cf10 subplot(1,2,1);\
axis([0.5 1 -1 1])\
axis([1 5 1 8])\
clf			% clear figure\
imagesc(A)\
imagesc(magic(15))\
imagesc(A), colorbar, colormap gray;\
\
hist(x [,y])\
hist(a)\
hist(x, 20)\
scatter(x,y,s)\
contour(x,y,z)\
contour(var)\
\
t = linspace (0, 50, 200)';\
y = linspace (0.1, 0.2, 50)';\
polar(theta, rho)\
polar(x,y)\
pie(x, explode)\
pie(y)\
[x,y] = meshgrid(x,y)\
mesh(x,y,z)	\'96 Draws a wireframe mesh.\
meshc(x,y,z) 	\'96 Draws a wireframe mesh with underlying contour lines.\
meshz(x,y,z) 	\'96 Draws a wireframe mesh with Z curtain.\
surf(x,y,z) 	\'96 Draws a shaded mesh.\
\
linestyles(\'91-\'92 \'91--\'92 \'91:\'92  \'91-.\'92)markerstyles(\'91+\'92 \'91o\'92 \'91*\'92 \'91.\'92 \'91x\'92 \'91s\'92 \'91d\'92)colors(\'91k\'92 \'91r\'92 \'91g\'92 \'91b\'92 \'91m\'92 \'91c\'92 \'91w\'92)\
\
\pard\pardeftab720\partightenfactor0
\cf4 \
\
x = lsode ("f", x0, t);\
lsode\'a0-- Livermore Solver for Ordinary Differential Equations\
\
\
load x.dat\
d = load('data.dat')\
t = tmpfile\
load t\
\
save mat_ouput.mat matrix;\
save mat_ouput.txt v -ascii;\
save t v\
save variables.lst\
\
print -dpdf foo.pdf\
\
\
\
\pard\pardeftab720\sl364\partightenfactor0
\cf4 f = figure;\
b1 = uicontrol (f, "string", "A Button", "position",[10 10 150 40]);\
c1 = uicontrol (f, "style", "checkbox", "string", "a checkbox", "position",[10 120 150 40]);\
dims = inputdlg (prompt, "Enter Box Dimensions", rowscols, defaults);\
msgbox ("You cancelled.");\
gp = uibuttongroup (f, "Position", [ 0 0.5 1 1])\
b2 = uicontrol (gp, "style", "radiobutton", "string", "Choice 2", "Position", [ 10 50 100 30 ]);\
\pard\pardeftab720\partightenfactor0
\cf4 \cb5 \
\pard\pardeftab720\sl320\partightenfactor0
\cf4 pkg load symbolic\
symbols\
y = sym ('y');\
expand((x-5)*(x+9))\
collect(x^3 *(x-7), z)\
\pard\pardeftab720\partightenfactor0
\cf4 \
\pard\pardeftab720\sl280\partightenfactor0
\cf4 octave -qf --no-window-system main.m\
\pard\pardeftab720\partightenfactor0
\cf4 \cb5 \
\pard\pardeftab720\partightenfactor0

\f0\fs36 \cf2 \cb1 \ul Abbreviations:
\fs28 \cf11 \kerning1\expnd0\expndtw0 \ulnone \CocoaLigature0 \
\pard\pardeftab720\partightenfactor0

\f2\fs32 \cf12 \cb5 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf11 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 \expnd0\expndtw0\kerning0
\ul \CocoaLigature1 URLs:
\fs28 \cf11 \kerning1\expnd0\expndtw0 \ulnone \CocoaLigature0 \
\pard\pardeftab720\li540\fi-540\partightenfactor0
\cf11 http://satya-data.blogspot.com\
{\field{\*\fldinst{HYPERLINK "https://gist.github.com/miguelsaddress/a6f9ae2a0b3a1d66e3c1"}}{\fldrslt https://gist.github.com/miguelsaddress/a6f9ae2a0b3a1d66e3c1}}\
}